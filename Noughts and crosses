from cProfile import label
from email.mime import image
from pickle import GLOBAL

import database
from tkinter import ttk
from tkinter import *
from turtle import bgcolor, update
from PIL import Image,ImageTk
from functools import partial
from tkinter import messagebox
from copy import deepcopy
import random
import tkinter
winx_s=0
wino_s=0
winx_m=0
wino_m=0
tie_s=0
tie_m=0
count=0
down=0
# sign variable to decide the turn of which player
sign = 0

# Creates an empty board
global board
board = [[" " for x in range(3)] for y in range(3)]

root=Tk()
root.title("TIC TAC TOE")

def end():
    exit()
 
def howtoplay():
    win=Toplevel(root)
    win.grab_set()
    back2=Button(win,width=6,height=1,text="BACK",fg="white",bg="black",font="Times 25 italic bold",highlightthickness=3,highlightbackground="black",command=lambda: win.destroy()).place(y=770,x=10)
    win.attributes('-fullscreen', True)
    count=0
    global down
    down=0
    def change_imgb():
        global down,count
        down-=1
        if(down==4):
                img2=ImageTk.PhotoImage(Image.open("D:\\College\\mini project\\4.PNG"))
                label.configure(image=img2)
                label.image=img2
                count=down
        elif(down==3):
            img2=ImageTk.PhotoImage(Image.open("D:\\College\\mini project\\3.PNG"))
            label.configure(image=img2)
            label.image=img2
            count=down
        elif(down==2):
                img2=ImageTk.PhotoImage(Image.open("D:\\College\\mini project\\2.PNG"))
                label.configure(image=img2)
                label.image=img2
                count=down
        elif(down==1):
            img2=ImageTk.PhotoImage(Image.open("D:\\College\\mini project\\1.PNG"))
            label.configure(image=img2)
            label.image=img2
            count=down
        elif(down==0):
            img2=ImageTk.PhotoImage(Image.open("D:\\College\\mini project\\0.PNG"))
            label.configure(image=img2)
            label.image=img2
            count=down
        elif(down<0):
            down=0
            count=down
            return
    def change_img():
        global count,down
        count+=1
        if(count==1):
                img2=ImageTk.PhotoImage(Image.open("D:\\College\\mini project\\1.PNG"))
                label.configure(image=img2)
                label.image=img2
                down=count
        elif(count==2):
            img2=ImageTk.PhotoImage(Image.open("D:\\College\\mini project\\2.PNG"))
            label.configure(image=img2)
            label.image=img2
            down=count
        elif(count==3):
                img2=ImageTk.PhotoImage(Image.open("D:\\College\\mini project\\3.PNG"))
                label.configure(image=img2)
                label.image=img2
                down=count
        elif(count==4):
            img2=ImageTk.PhotoImage(Image.open("D:\\College\\mini project\\4.PNG"))
            label.configure(image=img2)
            label.image=img2
            down=count
        elif(count==5):
            img2=ImageTk.PhotoImage(Image.open("D:\\College\\mini project\\5.PNG"))
            label.configure(image=img2)
            label.image=img2
            down=count
        elif(count>5):
            count=5
            down=count
            return
    #Convert To PhotoImage
    img1= ImageTk.PhotoImage(Image.open("D:\\College\\mini project\\0.PNG"))
    #Create a Label widget
    label= Label(win,image= img1)
    label.place(x=350,y=50)
    #Create a Button to handle the update Image event
    back= Button(win,width=16,height=3,text= "<", bg="lightblue",font= ('Helvetica 13 bold'),command= change_imgb)
    back.place(x=60,y=600)
    front= Button(win,width=16,height=3,text= ">",bg="lightblue", font= ('Helvetica 13 bold'),command= change_img)
    front.place(x=1300,y=600)
    win.bind("<Return>", change_img,change_imgb)
    win.mainloop()

def playg():
       global sign
    sign = 0

    # Creates an empty board
    global board
    board = [[" " for x in range(3)] for y in range(3)]

    # Check l(O/X) won the match or not
    # according to the rules of the game
    def winner(b, l):
        return ((b[0][0] == l and b[0][1] == l and b[0][2] == l) or
                (b[1][0] == l and b[1][1] == l and b[1][2] == l) or
                (b[2][0] == l and b[2][1] == l and b[2][2] == l) or
                (b[0][0] == l and b[1][0] == l and b[2][0] == l) or
                (b[0][1] == l and b[1][1] == l and b[2][1] == l) or
                (b[0][2] == l and b[1][2] == l and b[2][2] == l) or
                (b[0][0] == l and b[1][1] == l and b[2][2] == l) or
                (b[0][2] == l and b[1][1] == l and b[2][0] == l))

    # Configure text on button while playing with another player
    def get_text(i, j, gb, l1, l2):
        global playername_s
        global winx_s,wino_s,winx_m,wino_m,tie_s,tie_m
        global sign
        if board[i][j] == ' ':
            if sign % 2 == 0:
                l1.config(state=DISABLED)
                l2.config(state=ACTIVE)
                board[i][j] = "X"
            else:
                l2.config(state=DISABLED)
                l1.config(state=ACTIVE)
                board[i][j] = "O"
            sign += 1
            button[i][j].config(state=DISABLED)
            if(board[i][j]=="X"):
                button[i][j].config(text=board[i][j],bg="white")
            elif(board[i][j]=="O"):
                button[i][j].config(text=board[i][j],bg="black")
            
        if winner(board, "X"):
            gb.destroy()    
            box = messagebox.showinfo("WINNER", database.player_m1)
            
            winx_m+=1
        elif winner(board, "O"):
            gb.destroy()
            box = messagebox.showinfo("WINNER",database.player_m2)
            wino_m+=1
        elif(isfull()):
            gb.destroy()
            box = messagebox.showinfo("TIE GAME", "TIE GAME")
            tie_m+=1
    # Check if the player can push the button or not
    def isfree(i, j):
        return board[i][j] == " "

    # Check the board is full or not
    def isfull():
        flag = True
        for i in board:
            if(i.count(' ') > 0):
                flag = False
        return flag
def result():
      pass
def changename():
      pass
     


def mainscreen():
    title1=Label(root,text="Noughts And Crosses",fg="orange",bg="#151515",font="ComicSansMS 40 italic bold").place(x=270,y=110)
    title2=Label(root,text="Play with friends :)",fg="blue",bg="#151515",font="Times 40 italic bold").place(x=570,y=190)
    exitgame=Button(root,width=20,height=2,text="EXIT",fg="red",bg="grey",font="Times 25 italic bold",highlightthickness=3,highlightbackground="black",command=end).place(y=600,x=900)
    gamerules=Button(root,width=20,height=2,text="GAME RULES",fg="green",bg="lightblue",font="Times 25 italic bold",highlightthickness=3,highlightbackground="black",command=howtoplay).place(y=400,x=900)
    playgame=Button(root,width=20,height=2,text="PLAY GAME",fg="purple",bg="lightgreen",font="Times 25 italic bold",highlightthickness=3,highlightbackground="black",command=playg).place(y=400,x=490)
    results=Button(root,width=20,height=2,text="RESULTS",fg="purple",bg="yellow",font="Times 25 italic bold",highlightthickness=3,highlightbackground="black",command=result).place(y=600,x=490)
    name_change=Button(root,width=20,height=2,text="RENAME",fg="red",bg="white",font="Times 15 italic bold",highlightthickness=3,highlightbackground="black",command=changename).place(y=10,x=1300)






img1= ImageTk.PhotoImage(Image.open("D:\\College\\mini project\\bg2.PNG"))
label= Label(root,image= img1)
label.place(x=-10,y=-10)
mainscreen()
  
root.attributes('-fullscreen', True)
root.mainloop()
